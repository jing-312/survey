<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.survey.component.mappers.RoleMapper">
	<resultMap id="BaseResultMap" type="com.atguigu.survey.entities.manager.Role">
		<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="CHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from manager_role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.atguigu.survey.entities.manager.Role">
		insert into manager_role (role_id, role_name)
		values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=CHAR})
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.atguigu.survey.entities.manager.Role">
		update manager_role
		set role_name = #{roleName,jdbcType=CHAR}
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select role_id, role_name
		from manager_role
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select role_id, role_name
		from manager_role
	</select>
	<delete id="batchDelete">
		delete from manager_role where role_id in
		<foreach collection="roleIdList" item="roleId" open="(" close=")"
			separator=",">#{roleId}</foreach>
	</delete>
	<select id="getCurrentAuthIdList" resultType="integer">
		select auth_id from
		inner_role_auth
		where role_id=#{roleId}
	</select>
	<delete id="removeOldRelationship">
		delete from inner_role_auth where role_id=#{roleId}
	</delete>
	<insert id="saveNewRelationship">
		<foreach collection="authIdList" item="authId" separator=";">
			insert into inner_role_auth(role_id,auth_id)
			values(#{roleId},#{authId})
		</foreach>
	</insert>
	<resultMap type="com.atguigu.survey.entities.manager.Role" id="getRoleDeeplyByNameResultMap">
		<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="CHAR" />
		<collection property="authSet" ofType="com.atguigu.survey.entities.manager.Auth">
			<id column="auth_id" property="authId" jdbcType="INTEGER" />
			<result column="auth_name" property="authName" jdbcType="CHAR" />
			<collection property="resSet" ofType="com.atguigu.survey.entities.manager.Res">
				<id column="res_id" property="resId" jdbcType="INTEGER" />
			    <result column="servlet_path" property="servletPath" jdbcType="CHAR" />
			    <result column="public_status" property="publicStatus" jdbcType="BIT" />
			    <result column="res_code" property="resCode" jdbcType="INTEGER" />
			    <result column="res_pos" property="resPos" jdbcType="INTEGER" />
			</collection>
		</collection>
	</resultMap>
	<select id="getRoleDeeplyByName" resultMap="getRoleDeeplyByNameResultMap">
		SELECT
		    role.`role_id`,
		    role.`role_name`,
		    auth.`auth_id`,
		    auth.`auth_name`,
		    res.`res_id`,
		    res.`servlet_path`,
		    res.`res_code`,
		    res.`res_pos`,
		    res.`public_status`
		FROM `manager_role` role
		LEFT JOIN `inner_role_auth` ON role.`role_id`=inner_role_auth.`role_id`
		LEFT JOIN `manager_auth` auth ON inner_role_auth.`auth_id`=auth.`auth_id`
		LEFT JOIN `inner_auth_res` ON auth.`auth_id`=inner_auth_res.`auth_id`
		LEFT JOIN `manager_res` res ON inner_auth_res.`res_id`=res.`res_id`
		WHERE role_name=#{roleName}
	</select>
</mapper>