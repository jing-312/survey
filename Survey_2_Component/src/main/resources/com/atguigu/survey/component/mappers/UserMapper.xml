<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.survey.component.mappers.UserMapper">
	<resultMap id="BaseResultMap" type="com.atguigu.survey.entities.guest.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="CHAR" />
		<result column="user_pwd" property="userPwd" jdbcType="CHAR" />
		<result column="company" property="company" jdbcType="BIT" />
		<result column="code_arr" property="codeArrStr" jdbcType="CHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from guest_user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" useGeneratedKeys="true" keyProperty="userId">
		insert into guest_user (user_name, user_pwd,
		company, code_arr)
		values (#{userName,jdbcType=CHAR},
		#{userPwd,jdbcType=CHAR},
		#{company,jdbcType=BIT},
		#{codeArrStr,jdbcType=CHAR})
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.atguigu.survey.entities.guest.User">
		update guest_user
		set user_name = #{userName,jdbcType=CHAR},
		user_pwd = #{userPwd,jdbcType=CHAR},
		company = #{company,jdbcType=BIT}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select user_id, user_name, user_pwd, company, code_arr
		from guest_user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select user_id, user_name, user_pwd, company, code_arr
		from guest_user
	</select>
	<select id="getUserCount" resultType="int">
		SELECT COUNT(*) FROM guest_user WHERE user_name LIKE BINARY #{userName}
	</select>
	<select id="getUserByLogin" resultMap="BaseResultMap">
		SELECT user_id,user_name,user_pwd,company, code_arr
		FROM guest_user 
		WHERE user_name LIKE BINARY #{userName} AND user_pwd LIKE BINARY #{userPwd}
	</select>
	<insert id="saveRelationShip">
		insert into inner_user_role(user_id,role_id) values(#{userId},#{roleId})
	</insert>
	<update id="batchUpdateCodeArr">
		<foreach collection="userList" item="user" separator=";">
			update guest_user set code_arr=#{user.codeArrStr} 
			where user_id=#{user.userId}
		</foreach>
	</update>
</mapper>